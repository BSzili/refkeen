SDL_t0Service
	SDL_PCService
	SDL_ALSoundService

SD_Startup -> BE_ST_StartAudioSDService
SD_SetSoundMode -> SDL_SetTimerSpeed -> SDL_SetIntsPerSec -> SDL_SetTimer0 -> BE_ST_SetTimer
#define	TickBase	70
MusicMode == smm_AdLib

void (*SoundUserHook)(void); 
SD_SetUserHook
//LocalTime++;
//TimeCount++;

BE_ST_ShortSleep
BE_ST_WaitVBL
BE_ST_Delay
BE_ST_TimeCountWaitForDest
BE_ST_TimeCountWaitFromSrc

BEL_ST_UpdateHostDisplay();

GameLoop
	DrawPlayScreen
		VW_SetScreen
			VW_WaitVBL
				BE_ST_WaitVBL

/* Skull'n'Bones loop */
USL_PlayPong
	do
	{
		waittime = SD_GetTimeCount();
		VW_UpdateScreen();
		...
		BE_ST_TimeCountWaitFromSrc(waittime, 1);
	}

/* Fizzle fade loop */
FizzleFade
	do
	{
		...
		frame++;
		BE_ST_TimeCountWaitForDest(frame);
	} while (1);

/* Game playloop */
PlayLoop
	do
	{
		...
		BE_ST_TimeCountWaitFromSrc(SD_GetTimeCount(), 1);
	}while (!playstate);

VW_ColorBorder
	BE_ST_SetBorderColor

VW_SetSplitScreen
	BE_ST_EGASetSplitScreen

cat3d_exe_main
	DemoLoop
		GameLoop
			PlayLoop
				ThreeDRefresh
					DrawWallList
						ScaleWalls
							ExecuteCompScale
								BE_ST_EGAUpdateGFXPixel4bpp
					DrawScaleds
						ScaleShape
							ExecuteCompShape
								ExecuteCompScale
									BE_ST_EGAUpdateGFXPixel4bpp
					DrawHand
						VW_MaskBlock
							BE_ST_EGAUpdateGFXByte
							BE_ST_EGAFetchGFXByte

RedrawStatusWindow
	DrawNum
		DrawChar
			BE_ST_EGAUpdateGFXByteScrToScr
	DrawHealth
		VW_DrawPic
			VW_MemToScreen
				BE_ST_EGAUpdateGFXBuffer
		LatchDrawPic
			BE_ST_EGAUpdateGFXBufferScrToScr
	DrawRadar
		LatchDrawPic
			BE_ST_EGAUpdateGFXBufferScrToScr
		RadarBlip
			BE_ST_EGAUpdateGFXPixel4bpp
		DrawNSEWIcons
			VW_MaskBlock
				BE_ST_EGAUpdateGFXByte
				BE_ST_EGAFetchGFXByte
	DrawGems
		LatchDrawPic
			BE_ST_EGAUpdateGFXBufferScrToScr

// drawing functions
void BE_ST_EGAUpdateGFXByte(uint16_t destOff, uint8_t srcVal, uint16_t planeMask)
void BE_ST_EGAUpdateGFXBits(uint16_t destOff, uint8_t srcVal, uint8_t bitsMask)
void BE_ST_EGAUpdateGFXBuffer(uint16_t destOff, const uint8_t *srcPtr, uint16_t num, uint16_t planeMask)
void BE_ST_EGAUpdateGFXByteScrToScr(uint16_t destOff, uint16_t srcOff)
void BE_ST_EGAUpdateGFXByteWithPlaneMaskScrToScr(uint16_t destOff, uint16_t srcOff, uint16_t planeMask)
void BE_ST_EGAUpdateGFXBitsScrToScr(uint16_t destOff, uint16_t srcOff, uint8_t bitsMask)
void BE_ST_EGAUpdateGFXBufferScrToScr(uint16_t destOff, uint16_t srcOff, uint16_t num)
uint8_t BE_ST_EGAFetchGFXByte(uint16_t destOff, uint16_t planenum)
void BE_ST_EGAFetchGFXBuffer(uint8_t *destPtr, uint16_t srcOff, uint16_t num, uint16_t planenum)

// hottest ones
void BE_ST_EGAUpdateGFXPixel4bpp(uint16_t destOff, uint8_t color, uint8_t bitsMask)
void BE_ST_EGAUpdateGFXPixel4bppRepeatedly(uint16_t destOff, uint8_t color, uint16_t count, uint8_t bitsMask)

void BE_ST_EGAXorGFXByte(uint16_t destOff, uint8_t srcVal, uint16_t planeMask) -> VWL_XORBuffer -> VW_DrawPropString (NUMFONT)
void BE_ST_EGAOrGFXBits(uint16_t destOff, uint8_t srcVal, uint8_t bitsMask) // unused

// changing screen address
VW_SetScreen
VW_UpdateScreen
ThreeDRefresh
	BE_ST_SetScreenStartAddress


displayofs+panadjust
bufferofs = screenloc[screenpage];
id0_unsigned_t screenloc[3]= {0x900,0x2000,0x3700};
#define PAGE1START		0x900
#define PAGE2START		0x2000
#define	PAGE3START		0x3700
#define	FREESTART		0x4e00 

// functions to be optimized
VW_MaskBlock
ExecuteCompScale
ExecuteCompShape
BuildCompScale
BuildCompShape
ExecuteCompScale
ClearScreen
VW_Bar
FixedByFrac

// save games
GE_SaveGame
	USL_SaveGame
		SaveTheGame
id0_boolean_t	LoadTheGame(BE_FILE_T file);
loadedgame
ex_loadedgame
USL_WriteConfig(void)
USL_DoSaveGame
BE_Cross_open_for_overwriting

SetupGameLevel
	CA_CacheMap

FizzleOut
GameLoop
	DrawEnterScreen

VerifyGateExit
playstate == ex_warped

DEBUG_OVERHEAD

// key choices
BE_ST_AltControlScheme_Push();
BE_ST_AltControlScheme_Pop();
BE_ST_AltControlScheme_PrepareFaceButtonsDOSScancodes
USL_CtlDialog // cat3d
GetKeyChoice
sc_N
Keyboard[49]
sc_Y
Keyboard[21]
BE_ST_ShortSleep

// 32-bit (fixed) obj fields
distance
	100
	#define GLOBAL1		(1l<<16)
	#define TILEGLOBAL  GLOBAL1
	#define TILESHIFT	16l
	MoveObj

viewheight, viewx OK, DRAW
	TransformActor

xl, xh, yl, yh OK
	CalcBounds
	 ob->x - ob->size; 
	 
size
	MINDIST