VERDIRNAME=kdreams

DEBUG=0
BINPREFIX=m68k-amigaos-

CXX=$(BINPREFIX)gcc

STRIPBIN=$(BINPREFIX)strip -K ___stack
SRC=.
BESRC=..
OBJPREFIX=obj
OBJ=$(OBJPREFIX)/$(VERDIRNAME)
IDOBJ=$(OBJ)/id
BEOBJ=$(OBJ)/be

GAMEOBJECTS=$(OBJ)/id_ca.o \
            $(OBJ)/id_in.o \
            $(OBJ)/id_mm_amiga.o \
            $(OBJ)/id_rf_a.o \
            $(OBJ)/id_rf.o \
            $(OBJ)/id_sd.o \
            $(OBJ)/id_us_a.o \
            $(OBJ)/id_us.o \
            $(OBJ)/id_vw_a.o \
            $(OBJ)/id_vw_ac.o \
            $(OBJ)/id_vw_ae.o \
            $(OBJ)/id_vw.o \
            $(OBJ)/kd_act1.o \
            $(OBJ)/kd_act2.o \
            $(OBJ)/kd_demo.o \
            $(OBJ)/kd_keen.o \
            $(OBJ)/kd_main.o \
            $(OBJ)/kd_play.o \
            $(OBJ)/gelib.o \
            $(OBJ)/jam_io.o \
            $(OBJ)/loadscn2.o \
            $(OBJ)/lzhuf.o \
            $(OBJ)/soft.o \
            $(OBJ)/key_scancode_converters.o \
            $(OBJ)/altcontroller.o \
            $(OBJ)/statetype_ptr_conversion.o

BEOBJECTS=$(BEOBJ)/actual_main.o \
          $(BEOBJ)/be_cross.o \
          $(BEOBJ)/be_cross_fs.o \
          $(BEOBJ)/be_cross_mem_amiga.o \
          $(BEOBJ)/be_st_amiga.o \
          $(BEOBJ)/be_st_amiga_cd32.o \
          $(BEOBJ)/be_st_amiga_audio_timer.o \
          $(BEOBJ)/be_st_amiga_graphics.o \
          $(BEOBJ)/crc32.o \
          $(BEOBJ)/depklite.o \
          $(BEOBJ)/unlzexe.o

OBJECTS=$(GAMEOBJECTS) $(BEOBJECTS)

INTCXXFLAGS+= -I$(SRC) -I$(BESRC)  -DREFKEEN_VER_KDREAMS=1 -DALTCONTROLLER

EXENAME=reflection-kdreams

ifeq ($(DEBUG),1)
	INTCXXFLAGS+= -ggdb -ftrapv -fstack-check -DREFKEEN_CONFIG_DEBUG -DDEBUG
	CXXOPT=
else
	CXXOPT=-O2 -fomit-frame-pointer
endif

INTCXXFLAGS+= $(CXXOPT) -Wall -Wno-missing-braces -Wno-switch -Wno-parentheses -m68020 -msoft-float -std=c99 -noixemul
INTLDFLAGS= -lm -m68020 -msoft-float -noixemul
ifeq ($(DEBUG),1)
	INTLDFLAGS+= -ldebug
endif
# there must be a better way to do this
INTLDFLAGS+= /usr/local/amiga/m68k-amigaos/lib/libnix/swapstack.o

EXE_PATH=$(BESRC)/$(EXENAME)$(EXE_EXT)

.PHONY: all game clean veryclean

all: game

game: $(EXE_PATH)

$(EXE_PATH): $(OBJECTS)
	$(CXX) $(OBJECTS) $(LDFLAGS) $(INTLDFLAGS) -o $@
ifeq ($(DEBUG),0)
	$(STRIPBIN) $(EXE_PATH)
endif

$(BEOBJ)/crc32.o: $(BESRC)/crc32/crc32.c | $(BEOBJ)
	$(CXX) -c $(INTCXXFLAGS) $(CXXFLAGS) $< -o $@

$(BEOBJ)/depklite.o: $(BESRC)/depklite/depklite.c | $(BEOBJ)
	$(CXX) -c $(INTCXXFLAGS) $(CXXFLAGS) $< -o $@

$(BEOBJ)/unlzexe.o: $(BESRC)/unlzexe/unlzexe.c | $(BEOBJ)
	$(CXX) -c $(INTCXXFLAGS) $(CXXFLAGS) $< -o $@

$(OBJ)/loadscn2.o: $(SRC)/lscr/loadscn2.c | $(OBJ)
	$(CXX) -c $(INTCXXFLAGS) $(CXXFLAGS) $< -o $@

$(BEOBJ)/%.o: $(BESRC)/%.c $(BEOBJ)
	$(CXX) -c $(INTCXXFLAGS) $(CXXFLAGS) $< -o $@
$(OBJ)/%.o: $(SRC)/%.c | $(OBJ)
	$(CXX) -c $(INTCXXFLAGS) $(CXXFLAGS) $< -o $@

$(BEOBJ): | $(OBJ)
	-mkdir $(BEOBJ)
$(OBJ): | $(OBJPREFIX)
	-mkdir $(OBJ)
$(OBJPREFIX):
	-mkdir $(OBJPREFIX)

clean:
	-rm -f $(EXE_PATH) $(OBJECTS)

